<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var current_x;
var current_y;
var current;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button switches
image_speed = 0;
image_index = 0;

///Left click
if (mouse_check_button(mb_left)) &amp;&amp; position_meeting(mouse_x, mouse_y, id) {
    image_index = 1;
}

//////////////
///Keyboard///
//////////////
///set selected button
if selected == true {
    image_index = 1;
    current_x = x;
    current_y = y;
    current = id;
    show_debug_message(string(current_y));
    if (mouse_check_button(mb_left)) &amp;&amp; !position_meeting(mouse_x, mouse_y, id) {
        image_index = 0;
    }
}

///menu navigation
if global.move_timer &lt;= 0 {
    if (keyboard_check(ord('W'))) {
        ///code to move to the button above, if possible    
        current_new = instance_nth_nearest(current_x,current_y,obj_button,2);
        if current_new.y &lt; current_y {
            current.selected = false;
            current_new.selected = true;
            current_x = current_new.x;
            current_y = current_new.y;
            global.move_timer = 5;
        }
    }
    if (keyboard_check(ord('A'))) {}
    if (keyboard_check(ord('S'))) {}
    if (keyboard_check(ord('D'))) {}
}
global.move_timer--;

///select button via enter or left click + switch cases
if (keyboard_check(vk_enter) &amp;&amp; selected) || (mouse_check_button_released(mb_left) &amp;&amp; position_meeting(mouse_x, mouse_y, id)){
    switch(action) {
        case 0:
            room_goto(rm_init);
            break;
        case 1:
            game_end();
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);
///draw_set_font(fnt_button);

draw_set_colour(c_white);
draw_text(x,y,text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
